name: Test Measure Gems
on: push

jobs:
  test-gems-latest:
    runs-on: ubuntu-latest
    env:
      BRANCH_NAME: ${{ github.ref_name }}
      BUILD_NUMBER: ${{ github.run_number }}
      DEPLOY_PATH: ${{ github.ref_name }}/${{ github.run_number }} # Path for S3 deployment

    container: # Define the Docker container for the job. All subsequent steps run inside it.
      image: nrel/openstudio:3.10.0
      options: -u root -e "LANG=en_US.UTF-8" # These options are passed to the 'docker run' command internally

    steps:
      - name: Checkout Repository
        # The repository will be checked out inside the 'nrel/openstudio:3.10.0' container
        uses: actions/checkout@v4 # Use v4 for better security and features
        with:
          submodules: true # Set to true if your repository uses Git submodules

      - name: Verify Environment and Run Measures
        # All 'run' commands in this job now execute inside the specified Docker container.
        shell: bash # Specify the shell if needed, though bash is default for Ubuntu runners
        run: |
          echo "OpenStudio Version: $(openstudio --version)"
          echo "Ruby Version: $(ruby -v)"
          echo "Listing OpenStudio Gems: $(openstudio gem_list)"
          echo "Running measures with verbose output:"
          # This command will execute within the container.
          # Ensure that './lib/measures' is the correct path relative to the checkout.
          openstudio --verbose measure -r ./lib/measures

          # The output for 'test' should now be generated directly into the workspace
          # within the container, which is mounted from the host.
          # No 'docker cp' is needed as the workspace is shared.
          ls -al ./test # Verify the output directory exists and contains files

      - name: Configure AWS Credentials
        # This step is crucial for authenticating with AWS S3
        uses: aws-actions/configure-aws-credentials@v4 # Use v4 for updated features
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.S3_SECRET_ACCESS_KEY }} # Assuming this is your secret name
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }} # Replace with your AWS region, e.g., us-east-1

      - name: Sync files to S3 with branch and build in path
        shell: bash
        run: |
          echo "Deploying to s3://${{ secrets.S3_BUCKET }}/${DEPLOY_PATH}/"
          # Ensure './test' is the correct source directory for the files to upload to S3.
          # It must match the output directory from the 'Run Measures' step.
          aws s3 sync ./test s3://${{ secrets.S3_BUCKET }}/$DEPLOY_PATH/ \
            --delete \
            --acl public-read \
            --cache-control "max-age=0, no-cache, no-store, must-revalidate"
          echo "S3 sync complete."

      - name: Archive static site as artifact
        uses: actions/upload-artifact@v4
        with:
          name: static-html-artifact
          path: ./test # Path should be relative to the GitHub workspace, which is shared with the container